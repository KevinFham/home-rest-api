name: Deploy to GHCR

on:
  push:
    branches: [ "latest" ]
  pull_request:
    branches: [ "latest" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: kevinfham/home-rest-api

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy: 
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7

    steps: 
    - name: Debug
      run: echo ${{ github.run_number }} 

    - name: Prepare
      run: |
        platform=${{ matrix.platform }}
        echo "PLATFORM_LIST=${platform//\//-}" >> $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v4

    # https://github.com/sigstore/cosign-installer
    - name: Install Cosign
      uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
      with:
        cosign-release: 'v2.2.4'

    # https://github.com/docker/setup-qemu-action
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    # https://github.com/docker/setup-buildx-action
    - name: Set up Buildx
      uses: docker/setup-buildx-action@v3

    # https://github.com/docker/login-action
    - name: Log into registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GIT_TOKEN }}

    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        platforms: ${{ matrix.platform }}
        labels: ${{ steps.meta.outputs.labels }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        outputs: type=image,push-by-digest=true,name-canonical=true,push=true
        # Use GitHubActions cache for faster build
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Export digest
      run: |
        mkdir -p ${{ runner.temp }}/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "${{ runner.temp }}/digests/${digest#sha256:}"

    # https://github.com/actions/upload-artifact
    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ env.PLATFORM_LIST }}
        path: ${{ runner.temp }}/digests/*
        if-no-files-found: error
        retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # https://github.com/actions/download-artifact
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Log into registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_TOKEN }}

      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/metadata-action
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t ${{env.REGISTRY}}/" + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}

      # https://github.com/sigstore/cosign
      - name: Sign published Docker image
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          #DIGEST: ${{ steps.meta.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}:${{ steps.meta.outputs.version }}


