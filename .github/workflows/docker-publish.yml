name: Deploy to GHCR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# (Jobs set to not push on PR)
jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
    - name: Debug
      run: echo ${{ github.run_number }} 

    - name: Checkout
      uses: actions/checkout@v4

    # https://github.com/sigstore/cosign-installer
    - name: Install Cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
      with:
        cosign-release: 'v2.2.4'

    # https://github.com/docker/setup-buildx-action
    - name: Set up Buildx
      uses: docker/setup-buildx-action@v3

    # https://github.com/docker/login-action
    - name: Log into registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GIT_TOKEN }}

    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v5
      with: 
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # Use GitHubActions cache for faster build
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # https://github.com/sigstore/cosign
    - name: Sign published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      env:
        # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
        TAGS: ${{ steps.meta.outputs.tags }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
      run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}


